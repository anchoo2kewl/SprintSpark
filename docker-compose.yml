services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    environment:
      - DB_PATH=/data/sprintspark.db
      - JWT_SECRET=${JWT_SECRET:-dev-secret-change-in-production}
      - PORT=8080
      - ENV=${ENV:-production}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://sprintspark.biswas.me}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      # Mount SQLite database for persistence
      - sprintspark-data:/data
    networks:
      - sprintspark
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  web:
    build:
      context: .
      dockerfile: ./web/Dockerfile
    ports:
      - "8084:80"
    networks:
      - sprintspark
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

volumes:
  # Persistent volume for SQLite database
  sprintspark-data:
    driver: local

networks:
  sprintspark:
    driver: bridge
